# -*- coding: utf-8 -*-
"""[PTDLCB] SOURCE CODE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A0G3fB2qTt3ff8yINVlghnL0VUZFJO9j

#**AD CLICK PREDICTION ANALYSIS**
# **(Phân tích dự đoán dựa vào lượt nhấp chuột vào quảng cáo)**

# IMPORT LIBRARIES AND LOAD DATA
**Import thư viện cần thiết và tải bộ dữ liệu**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import warnings
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from xgboost import XGBClassifier

warnings.filterwarnings('ignore')

st.title("Dự đoán lượt nhấp chuột vào quảng cáo")
st.write("Ứng dụng sử dụng các mô hình Machine Learning để phân tích và dự đoán dữ liệu quảng cáo.")

# --- Upload dữ liệu ---
uploaded_file = st.file_uploader("Tải lên file dữ liệu (Excel hoặc CSV)", type=["csv", "xlsx"])

if uploaded_file:
    # Đọc dữ liệu
    if uploaded_file.name.endswith('.csv'):
        data = pd.read_csv(uploaded_file)
    else:
        data = pd.read_excel(uploaded_file)

    st.write("**Dữ liệu ban đầu:**")
    st.dataframe(data.head())

    # --- Xử lý dữ liệu ---
    st.header("Phân tích dữ liệu")

    # Hiển thị thông tin
    st.subheader("Thông tin dữ liệu")
    st.write(data.info())

    # Loại bỏ cột không cần thiết
    data = data.drop(['id', 'full_name'], axis=1, errors='ignore')

    # Hiển thị giá trị null
    st.subheader("Số lượng giá trị null:")
    st.write(data.isna().sum())

    # Loại bỏ giá trị null
    data = data.dropna()

    # --- Biểu đồ phân tích ---
    if st.checkbox("Hiển thị ma trận tương quan"):
        plt.figure(figsize=(10, 8))
        corr = data.corr()
        sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f")
        st.pyplot(plt)

    # --- Lựa chọn mô hình ---
    st.header("Chọn mô hình Machine Learning")
    model_option = st.selectbox(
        "Chọn mô hình:",
        ["Logistic Regression", "Random Forest", "K-Nearest Neighbors (KNN)", "XGBoost"]
    )

    # --- Tiền xử lý dữ liệu ---
    X = data.drop(['click'], axis=1)
    y = data['click']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

    # --- Huấn luyện mô hình ---
    model = None
    if model_option == "Logistic Regression":
        model = LogisticRegression(random_state=42, max_iter=1000)
    elif model_option == "Random Forest":
        model = RandomForestClassifier(random_state=42)
    elif model_option == "K-Nearest Neighbors (KNN)":
        model = KNeighborsClassifier(n_neighbors=3)
    elif model_option == "XGBoost":
        model = XGBClassifier(random_state=42)

    if model:
        model.fit(X_train, y_train)
        predictions = model.predict(X_test)
        accuracy = accuracy_score(y_test, predictions)

        st.subheader(f"Kết quả với mô hình: {model_option}")
        st.write(f"**Accuracy:** {accuracy:.2f}")
        st.write("**Classification Report:**")
        st.text(classification_report(y_test, predictions))

        # Hiển thị confusion matrix
        cm = confusion_matrix(y_test, predictions)
        plt.figure(figsize=(6, 4))
        sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
        plt.title(f'Confusion Matrix ({model_option})')
        st.pyplot(plt)

from google.colab import drive
drive.mount('/content/drive')

url = "https://drive.google.com/uc?id=1P6IUd8WQrTAlWZMshN5iV0uDwMIXOcW3"
output = "data.xlsx"
gdown.download(url, output, quiet=False)
data = pd.read_excel(output)
data
